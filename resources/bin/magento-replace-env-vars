#!/usr/bin/env php
<?php

$Outputs = require('configure-instance-resources.php');


$MEDIA_S3_ACCESS_KEY = getenv('MEDIA_S3_ACCESS_KEY') ? getenv('MEDIA_S3_ACCESS_KEY') : null;

if (!$MEDIA_S3_ACCESS_KEY && $Outputs['MediaAccessKey']) {
    $MEDIA_S3_ACCESS_KEY = $Outputs['MediaAccessKey'];
    echo "Automatically configuring Media ACCESS_KEY to $MEDIA_S3_ACCESS_KEY.\n";
}

$MEDIA_S3_SECRET_KEY = getenv('MEDIA_S3_SECRET_KEY') ? getenv('MEDIA_S3_SECRET_KEY') : null;

if (!$MEDIA_S3_SECRET_KEY && $Outputs['MediaSecretKey']) {
    $MEDIA_S3_SECRET_KEY = $Outputs['MediaSecretKey'];
    echo "Automatically configuring Media SECRET_KEY to xxxxxx.\n";
}

$MEDIA_S3_BUCKET = getenv('MEDIA_S3_BUCKET') ? getenv('MEDIA_S3_BUCKET') : null;
if (!$MEDIA_S3_BUCKET && $Outputs['MediaBucketName']) {
    $MEDIA_S3_BUCKET = $Outputs['MediaBucketName'];
    echo "Automatically configuring media bucket name to $MEDIA_S3_BUCKET.\n";
}

$MEDIA_S3_REGION = getenv('MEDIA_S3_REGION') ? getenv('MEDIA_S3_REGION') : 'eu-west-1';
$ELASTICACHE_CONNECTION = getenv('ELASTICACHE_CONNECTION') ? getenv('ELASTICACHE_CONNECTION') : null;

if (!$ELASTICACHE_CONNECTION && $Outputs['ElastiCacheAddress'] && $Outputs['ElastiCachePort']) {
    $ELASTICACHE_CONNECTION = $Outputs['ElastiCacheAddress'] . ':' . $Outputs['ElastiCachePort'];
    echo "Automatically configuring elasticache with $ELASTICACHE_CONNECTION\n";
}


$RDS_USERNAME = getenv('RDS_USERNAME');
$RDS_PASSWORD = getenv('RDS_PASSWORD');
$RDS_HOSTNAME = getenv('RDS_HOSTNAME');
$RDS_PORT = getenv('RDS_PORT');
$RDS_DB_NAME = getenv('RDS_DB_NAME');



$MEDIA_S3_WEBSITE_URL = getenv('MEDIA_S3_WEBSITE_URL') ? getenv('MEDIA_S3_WEBSITE_URL') : null;
if (!$MEDIA_S3_WEBSITE_URL && $Outputs['MediaWebsiteURL']) {
    $MEDIA_S3_WEBSITE_URL = $Outputs['MediaWebsiteURL'] . '/';
    echo "Automatically configuring media website url with $MEDIA_S3_WEBSITE_URL\n";
}

$MEDIA_S3_SECURE_URL = getenv('MEDIA_S3_SECURE_URL') ? getenv('MEDIA_S3_SECURE_URL') : null;
if (!$MEDIA_S3_SECURE_URL && $Outputs['MediaSecureURL']) {
    $MEDIA_S3_SECURE_URL = $Outputs['MediaSecureURL'] . '/';
    echo "Automatically configuring secure media website url with $MEDIA_S3_SECURE_URL\n";
}

echo "Setting default database settings\n";

$dbh = new PDO("mysql:host={$RDS_HOSTNAME};port={$RDS_PORT};dbname={$RDS_DB_NAME}", $RDS_USERNAME, $RDS_PASSWORD);


// This only happens on first deploy since we use INSERT IGNORE INTO..
// Set base url to empty if not set yet.. Because magento uses "localhost" as default and that does not work on AWS since beanstalk generates a URL.
$host = $Outputs['BeanstalkCNAME'] ? 'https://'.$Outputs['BeanstalkCNAME'] . '/' : getenv('WEBSITE_SECURE_URL');
echo "Setting web/secure/base_url to $host\n";
$dbh->exec("INSERT IGNORE INTO `core_config_data` (value, path) VALUES ('".$host."', 'web/secure/base_url');");


$host = $Outputs['BeanstalkCNAME'] ? 'http://'.$Outputs['BeanstalkCNAME'] . '/' : getenv('WEBSITE_UNSECURE_URL');
echo "Setting web/secure/base_url to $host\n";
$dbh->exec("INSERT IGNORE INTO `core_config_data` (value, path) VALUES ('".$host."', 'web/unsecure/base_url');");

// If we have configured a CDN for media we use it , else we use s3 directly.
if ($Outputs['MediaCDNDomainName']) {
    $http = 'http://'.$Outputs['MediaCDNDomainName'] . '/';
    $https = 'https://'.$Outputs['MediaCDNDomainName'] . '/';
    $dbh->exec("REPLACE INTO core_config_data (value, path) VALUES
                    ('$https', 'web/secure/base_media_url'), ('$http', 'web/unsecure/base_media_url')");
} else {
    $dbh->exec("REPLACE INTO core_config_data (value, path) VALUES
                    ('$MEDIA_S3_SECURE_URL', 'web/secure/base_media_url'), ('$MEDIA_S3_WEBSITE_URL', 'web/unsecure/base_media_url')");
}


// If we have configured a CDN for static view files, we use it, else load them directly from the EC2's.
if ($Outputs['SiteCDNDomainName']) {
    $http = 'http://'.$Outputs['SiteCDNDomainName'] . '/static/';
    $https = 'https://'.$Outputs['SiteCDNDomainName'] . '/static/';
    $dbh->exec("REPLACE INTO core_config_data (value, path) VALUES
                    ('$https', 'web/secure/base_static_url'), ('$http', 'web/unsecure/base_static_url')");
}


$file = getenv('APP_DIR') . '/app/etc/env.php';
$config = require($file);
$config['cache_types']['full_page'] = 1;
if ($ELASTICACHE_CONNECTION) {
    $config['session'] = array ( 'save' => 'memcached', 'save_path' => $ELASTICACHE_CONNECTION);
    list($host, $port) = explode(':', $ELASTICACHE_CONNECTION);
    $config['cache'] = array(
        'frontend' => array(
            'default' => array(
                'backend' => 'Zend_Cache_Backend_Libmemcached',
                'backend_options' => array(
                    'servers' => array(
                        array(
                            'host' => $host,
                            'port' => $port, 'weight' => 1
                        )
                    )
                )
            )
        )
    );
}

echo "Overwriting env file with respective cache settings\n";

$finished = '<?php return ' . var_export($config, true) . ';';
file_put_contents($file, $finished);


echo "Setting s3 access credentails\n";

echo shell_exec("/src/bin/magento s3:config:set --access-key-id \"$MEDIA_S3_ACCESS_KEY\" --secret-key \"$MEDIA_S3_SECRET_KEY\" --bucket \"$MEDIA_S3_BUCKET\" --region \"$MEDIA_S3_REGION\"");

